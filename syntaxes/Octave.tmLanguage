<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>m</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~O</string>
	<key>name</key>
	<string>Octave</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>(?x)
(?=function\b)
(?&lt;=^|\s)(function)\s+ # the function keyword
(?&gt;\[(.*)\])?\t # match various different combination of output arguments:
((?&gt;[a-zA-Z_]\w*))?
(?&gt;\s*=\s*)?
((?&gt;[a-zA-Z_]\w*(?&gt;[?!]|=(?!&gt;))? )) # the function name
(?=[ \t]*[^\s%|#]) # make sure arguments and not a comment follow
\s*(\() # the opening parenthesis for arguments
			</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.octave</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.output.function.octave</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.output.function.octave</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.octave</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>variable.parameter.input.function.octave</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.octave</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.with-arguments.octave</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.octave</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.output.function.octave</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.output.function.octave</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.octave</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
(?=function\b)
(?&lt;=^|\s)(function)\s+ # the function keyword
(?&gt;\[(.*)\])? # match various different combination of output arguments
((?&gt;[a-zA-Z_]\w*))?
(?&gt;\s*=\s*)?
((?&gt;[a-zA-Z_]\w*(?&gt;[?!]|=(?!&gt;))? )) # the function name</string>
			<key>name</key>
			<string>meta.function.without-arguments.octave</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants_override</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#brackets</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#curlybrackets</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#parens</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_double</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#transpose</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#double_quote</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#all_octave_keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#all_octave_comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable_invalid</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#not_equal_invalid</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable_assignment</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>all_octave_comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=%%)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.octave</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>%%</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.octave</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.double-percentage.octave</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>%\{</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.octave</string>
						</dict>
					</dict>
					<key>end</key>
					<string>%\}</string>
					<key>name</key>
					<string>comment.block.percentage.octave</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=%)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.octave</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>%</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.octave</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.percentage.octave</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=#)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.octave</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>#</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.octave</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.number-sign.octave</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>all_octave_keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#octave_keyword_control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#octave_keyword_structure</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#octave_constant_language</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#octave_storage_control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#octave_support_function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#octave_support_external</string>
				</dict>
			</array>
		</dict>
		<key>allofem</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#parens</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#curlybrackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#end_in_parens</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#transpose</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#all_octave_keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#all_octave_comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable_invalid</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
			</array>
		</dict>
		<key>brackets</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brackets.octave</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.brackets.octave</string>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brackets.octave</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#allofem</string>
				</dict>
			</array>
		</dict>
		<key>constants_override</key>
		<dict>
			<key>comment</key>
			<string>The user is trying to override Octave constants and functions.</string>
			<key>match</key>
			<string>(^|\;)\s*(inf|Inf|nan|NaN|eps|end)\s*=[^=]</string>
			<key>name</key>
			<string>meta.inappropriate.octave</string>
		</dict>
		<key>curlybrackets</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brackets.curly.octave</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.brackets.curly.octave</string>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brackets.curly.octave</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#allofem</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#end_in_parens</string>
				</dict>
			</array>
		</dict>
		<key>end_in_parens</key>
		<dict>
			<key>comment</key>
			<string>end as operator symbol</string>
			<key>match</key>
			<string>\bend\b</string>
			<key>name</key>
			<string>keyword.operator.symbols.octave</string>
		</dict>
		<key>escaped_quote</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.octave</string>
				</dict>
			</array>
		</dict>
		<key>number</key>
		<dict>
			<key>comment</key>
			<string>Valid numbers: 1, .1, 1.1, .1e1, 1.1e1, 1e1, 1i, 1j, 1e2j</string>
			<key>match</key>
			<string>(?&lt;=[\s\-\+\*\/\\=:\[\(\{,]|^)\d*\.?\d+([eE][+-]?\d)?([0-9&amp;&amp;[^\.]])*(i|j)?\b</string>
			<key>name</key>
			<string>constant.numeric.octave</string>
		</dict>
		<key>octave_constant_language</key>
		<dict>
			<key>comment</key>
			<string>Octave constants</string>
			<key>match</key>
			<string>\b(argv|e|eps|false|F_DUPFD|F_GETFD|F_GETFL|filesep|F_SETFD|F_SETFL|i|I|inf|Inf|j|J|NA|nan|NaN|O_APPEND|O_ASYNC|O_CREAT|OCTAVE_HOME|OCTAVE_VERSION|O_EXCL|O_NONBLOCK|O_RDONLY|O_RDWR|O_SYNC|O_TRUNC|O_WRONLY|pi|program_invocation_name|program_name|P_tmpdir|realmax|realmin|SEEK_CUR|SEEK_END|SEEK_SET|SIG|stderr|stdin|stdout|true|ans|automatic_replot|beep_on_error|completion_append_char|crash_dumps_octave_core|current_script_file_name|debug_on_error|debug_on_interrupt|debug_on_warning|debug_symtab_lookups|DEFAULT_EXEC_PATH|DEFAULT_LOADPATH|default_save_format|echo_executing_commands|EDITOR|EXEC_PATH|FFTW_WISDOM_PROGRAM|fixed_point_format|gnuplot_binary|gnuplot_command_axes|gnuplot_command_end|gnuplot_command_plot|gnuplot_command_replot|gnuplot_command_splot|gnuplot_command_title|gnuplot_command_using|gnuplot_command_with|gnuplot_has_frames|history_file|history_size|ignore_function_time_stamp|IMAGEPATH|INFO_FILE|INFO_PROGRAM|__kluge_procbuf_delay__|LOADPATH|MAKEINFO_PROGRAM|max_recursion_depth|octave_core_file_format|octave_core_file_limit|octave_core_file_name|output_max_field_width|output_precision|page_output_immediately|PAGER|page_screen_output|print_answer_id_name|print_empty_dimensions|print_rhs_assign_val|PS1|PS2|PS4|save_header_format_string|save_precision|saving_history|sighup_dumps_octave_core|sigterm_dumps_octave_core|silent_functions|split_long_rows|string_fill_char|struct_levels_to_print|suppress_verbose_help_message|variables_can_hide_functions|warn_assign_as_truth_value|warn_divide_by_zero|warn_empty_list_elements|warn_fortran_indexing|warn_function_name_clash|warn_future_time_stamp|warn_imag_to_real|warn_matlab_incompatible|warn_missing_semicolon|warn_neg_dim_as_zero|warn_num_to_str|warn_precedence_change|warn_reload_forces_clear|warn_resize_on_range_error|warn_separator_insert|warn_single_quote_string|warn_str_to_num|warn_undefined_return_values|warn_variable_switch_label|whos_line_format)\b</string>
			<key>name</key>
			<string>constant.language.octave</string>
		</dict>
		<key>octave_keyword_control</key>
		<dict>
			<key>comment</key>
			<string>Control keywords</string>
			<key>match</key>
			<string>(?&lt;!\.)\b(all_va_args|break|case|catch|continue|else|end|for|parfor|elseif|end_try_catch|end_unwind_protect|endfor|endparfor|endfunction|endif|endwhile|global|gplot|gsplot|if|otherwise|persistent|replot|return|static|start|startat|stop|switch|try|until|unwind_protect|unwind_protect_cleanup|varargin|varargout|wait|while)\b</string>
			<key>name</key>
			<string>keyword.control.octave</string>
		</dict>
		<key>octave_keyword_structure</key>
		<dict>
		  <key>comment</key>
			<string>Structure keywords</string>
			<key>match</key>
			<string>\b(classdef|endclassdef|endevents|endenumeration|endmethods|endproperties|enumeration|events|methods|properties)</string>
			<key>name</key>
			<string>keyword.structure.octave</string>
		</dict>
		<key>octave_special_functions</key>
		<dict>
		  <key>comment</key>
			<string>Special functions</string>
			<key>match</key>
			<string>\b(dbclear|dbstatus|dbstop|dbtype|dbwhere|diary|keyboard)</string>
			<key>name</key>
			<!-- These are not really keywords, but they're reserved, and I dunno what else to call them. -->
			<string>keyword.special.octave</string>
		</dict>
	<key>operators</key>
		<dict>
			<key>comment</key>
			<string>Operator symbols</string>
			<key>match</key>
			<string>\s*(\+\+|--|\+=|-=|\*=|\/=|\^=|\.\*=|\.\/=|\.\^=|==|~=|&gt;|&gt;=|&lt;|&lt;=|&amp;|&amp;&amp;|:|\||\|\||\+|-|\*|\.\*|/|\./|\\|\.\\|\^|\.\^|!)\s*</string>
			<key>name</key>
			<string>keyword.operator.symbols.octave</string>
		</dict>
		<key>parens</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.parens.octave</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.parens.octave</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.parens.octave</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#allofem</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#end_in_parens</string>
				</dict>
			</array>
		</dict>
		<key>special_characters</key>
		<dict>
			<key>comment</key>
			<string>Operator symbols</string>
			<key>match</key>
			<string>((\%([\+\-0]?\d{0,3}(\.\d{1,3})?)(c|d|e|E|f|g|G|s|((b|t)?(o|u|x|X))))|\%\%|\\(b|f|n|r|t|\\))</string>
			<key>name</key>
			<string>constant.character.escape.octave</string>
		</dict>
		<key>string</key>
		<dict>
			<key>begin</key>
			<string>((?&lt;=(\[|\(|\{|=|\s|,|;))|^)'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.octave</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'(?=(\]|\)|\}|=|~|&lt;|&gt;|&amp;|\||-|\+|\*|\.|\^|\||\s|;|,))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.octave</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.octave</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_quote</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unescaped_quote</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#special_characters</string>
				</dict>
			</array>
		</dict>
		<key>string_double</key>
		<dict>
			<key>begin</key>
			<string>((?&lt;=(\[|\(|\{|=|\s|;|:|,))|^)"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.octave</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?=(\]|\)|\}|=|~|&lt;|&gt;|&amp;|\||-|\+|\*|\.|\^|\||\s|;|:|,))</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.octave</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.octave</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_quote</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unescaped_quote</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#special_characters</string>
				</dict>
			</array>
		</dict>
		<key>transpose</key>
		<dict>
			<key>match</key>
			<string>((\w+)|(?&lt;=\])|(?&lt;=\)))\.?'</string>
			<key>name</key>
			<string>keyword.operator.transpose.octave</string>
		</dict>
		<key>unescaped_quote</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>'(?=.)</string>
					<key>name</key>
					<string>invalid.illegal.unescaped-quote.octave</string>
				</dict>
			</array>
		</dict>
		<!--
		<key>variable</key>
		<dict>
			<key>comment</key>
			<string>Valid variable.</string>
			<key>match</key>
			<string>\b[a-zA-Z]\w*\b</string>
			<key>name</key>
			<string>variable.other.valid.octave</string>
		</dict>
		-->
		<key>variable_assignment</key>
		<dict>
			<key>comment</key>
			<string>Incomplete variable assignment.</string>
			<key>match</key>
			<string>=\s*\.{0,2}\s*;?\s*$\n?</string>
			<key>name</key>
			<string>invalid.illegal.incomplete-variable-assignment.octave</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.octave</string>
	<key>uuid</key>
	<string>73B98234-BE68-4197-B6D1-AAB32684114D</string>
</dict>
</plist>
